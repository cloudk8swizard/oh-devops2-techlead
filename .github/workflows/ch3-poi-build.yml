name: CH3-POI-BUILD

on:
  pull_request:
    branches:
      - master
    paths: 
    - apis/poi/**
    - .github/workflows/ch3-poi-build.yml

  push:    
   branches: [ master ]
   paths: 
    - apis/poi/**
    - .github/workflows/ch3-poi-build.yml

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
    - name: CHECKOUT CURRENT REPO
      uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      #with:
      #  dotnet-version: '3.1.202'
    
    # To use Coveralis with Private Repos a PRO subscription is needed. For the current REPO I will not use this task.
    - name: Add Code Coverage Tools
      working-directory: apis/poi/tests/UnitTests
      run: dotnet add package coverlet.msbuild

    - name: Install dependencies
      run: dotnet restore apis/poi/web/*.csproj
      
    - name: .NET Build Web
      run: dotnet build --configuration Release --no-restore apis/poi/web/*.csproj

    - name: .NET Build Unit Tests
      run: dotnet build --configuration Release apis/poi/tests/UnitTests/UnitTests.csproj

    - name: .NET Test
      # The next "run" has been disable since Coveralls does not support private Repos with the free option.
      #run: dotnet test --no-restore --verbosity normal apis/poi/tests/UnitTests  /p:CollectCoverage=true /p:CoverletOutput=lcov/ /p:CoverletOutputFormat=lcov
      #The following action will execute the *.csproj solution inside the specified directory
      run: dotnet test --no-restore --verbosity normal apis/poi/tests/UnitTests 
    
    #- name: Coveralls
    #  uses: coverallsapp/github-action@master
    #  with:
    #    github-token: ${{ secrets.GITHUB_TOKEN }}
    #    path-to-lcov: apis/poi/tests/UnitTests/lcov/coverage.info
    #    base-path: apis/poi
    #    flag-name: Unit

    - name: Create Issue on Failure
      uses: actions/github-script@0.9.0
      if: failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
            body: body
          });